@using Microsoft.AspNetCore.Identity
@using DuoPoll.Dal.Entities
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@functions{

    static string RenderIf(bool condition, string trueString, string falseString = "")
    {
        return (condition) ? trueString : falseString;
    }

    static string Svg(string name, string height = "", string width = "", string cls = "", string style = "")
    {
        if (!System.IO.File.Exists("./wwwroot/svgs/" + name + ".svg"))
            return "";
        return System.IO.File.ReadAllText("./wwwroot/svgs/" + name + ".svg")
            .Replace("$height$", height)
            .Replace("$width$", width)
            .Replace("$class$", cls)
            .Replace("$style$", style);
    }

}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>@ViewData["Title"] - DuoPoll</title>
    @* <link href="@RenderIf(Environment.GetEnvironmentVariable("ASPNETCORE_ENVIRONMENT") == "Development","lib/tailwind.dev.css","lib/tailwind.prod.css"  )" rel="stylesheet"> *@
    <link href="~/lib/tailwind.dev.css" rel="stylesheet">
    <link href="~/css/site.css" rel="stylesheet">
</head>
<body class="flex flex-col min-h-screen dark:bg-gray-900 bg-gray-100 text-gray-600 dark:text-gray-200 font-sans">
<div class="header-2 border-b border-gray-700 dark:border-gray-200">
    <nav class="py-2 md:py-4 font-display">
        <div class="container px-4 mx-auto md:flex md:items-center">

            <div class="flex justify-between items-center">
                <a asp-area="" asp-controller="Home" asp-action="Index" class="font-bold text-4xl text-indigo-600 dark:text-gray-200">
                    <span class="dark:hover:text-indigo-600 duration-1000">Duo</span>
                    @Html.Raw(Svg("thumbs-up-down", "3rem", "3rem", "inline-block fill-current -m-2 dark:hover:text-indigo-600 duration-1000"))
                    <span class="dark:hover:text-indigo-600 duration-1000">Poll</span>
                </a>
                <button class="border border-solid border-gray-600 px-3 py-1 rounded opacity-50 hover:opacity-75 md:hidden" id="navbar-toggle">
                    <i class="fas fa-bars"></i>
                </button>
            </div>

            <div class="hidden md:flex flex-col md:flex-row md:ml-auto mt-3 md:mt-0" id="navbar-collapse">
                <a asp-controller="Poll" asp-action="Index"
                   class="p-2 lg:px-4 md:mx-2  @RenderIf(ViewData["Current"] != null && ViewData["Current"].ToString() == "polls.index", "text-white bg-indigo-600", "text-gray-600")
                     rounded hover:bg-gray-200 hover:text-gray-700 transition-colors duration-300">
                    @T["Polls"]
                </a>
                @if (SignInManager.IsSignedIn(User))
                {
                    <a asp-controller="User" asp-action="Poll"
                       class="p-2 lg:px-4 md:mx-2   @RenderIf(ViewData["Current"] != null && ViewData["Current"].ToString() == "user.polls", "text-white bg-indigo-600", "text-gray-600")
                     rounded hover:bg-gray-200 hover:text-gray-700 transition-colors duration-300">
                        @T["My Polls"]
                    </a>
                    <a asp-controller="Poll" asp-action="Create"
                       class="p-2 lg:px-4 md:mx-2   @RenderIf(ViewData["Current"] != null && ViewData["Current"].ToString() == "polls.create", "text-white bg-indigo-600", "text-gray-600")
                     rounded hover:bg-gray-200 hover:text-gray-700 transition-colors duration-300">
                        @T["Create"]
                    </a>
                }
                <a asp-controller="Poll" asp-action="Statistics"
                   class="p-2 lg:px-4 md:mx-2 @RenderIf(ViewData["Current"] != null && ViewData["Current"].ToString() == "polls.statistics", "text-white bg-indigo-600", "text-gray-600")
                        rounded hover:bg-gray-200 hover:text-gray-700 transition-colors duration-300">
                    @T["Statistics"]
                </a>
                <partial name="_LoginPartial"/>
            </div>
        </div>
    </nav>
</div>

<div class="py-6 md:py-12 flex-grow">
    <div id="app" class="container px-4 mx-auto">
        <main role="main" class="pb-3 font-body">
            @RenderBody()
        </main>
    </div>
</div>

<footer class="border-t border-solid border-gray-900 dark:border-gray-200 mt-4 py-4">
    <form id="setLang" asp-controller="User" asp-action="SetLanguage">
        <div class="container px-4 mx-auto">
            <div class="md:flex md:-mx-4 md:items-center">
                <div class="md:flex-1 md:px-4 text-center md:text-left">
                    <p>&copy; <strong> @DateTime.Now.Year - DuoPoll</strong></p>
                </div>
                <div class="md:flex-1 md:px-4 text-center md:text-right">
                    <div onclick="switchTheme()" class="cursor-pointer py-2 px-4 inline-block">@T["Switch theme"]</div>
                    <select id="lang" name="culture" class="inline-block text-black dark:bg-gray-700 dark:text-gray-200 bg-gray-200 transition duration-100 ease-in-out border border-gray-300 rounded shadow-sm focus:border-blue-500 focus:ring-2 focus:ring-blue-500 focus:outline-none focus:ring-opacity-50 disabled:opacity-50 disabled:cursor-not-allowed">
                        <option value="en">EN</option>
                        <option value="hu">HU</option>
                    </select>
                    <a asp-controller="Home" asp-action="ToS" class="py-2 px-4 inline-block hover:underline">@T["Terms of Service"]</a>
                    <a asp-controller="Home" asp-action="Privacy" class="py-2 px-4 inline-block hover:underline">@T["Privacy Policy"]</a>
                </div>
            </div>
        </div>
    </form>
</footer>

@* <script src="~/js/site.js" asp-append-version="true"></script> *@
<script>
//Load theme
if (localStorage.theme === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
  document.documentElement.classList.add('dark')
} else {
  localStorage.theme="light"
  document.documentElement.classList.remove('dark')
}

let toggleBtn = document.querySelector("#navbar-toggle");
let collapse = document.querySelector("#navbar-collapse");
let selectLang = document.getElementById("lang");

toggleBtn.onclick = () => {
  collapse.classList.toggle("hidden");
  collapse.classList.toggle("flex");
};

selectLang.options.selectedIndex = getLang("hu");

selectLang.onchange =()=>{
    document.getElementById("setLang").submit();
}

function getLang(lang){
    return getCookie(".AspNetCore.Culture").includes(lang)
}

function getCookie(cname) {
  let name = cname + "=";
  let ca = document.cookie.split(';');
  for(let i = 0; i < ca.length; i++) {
    let c = ca[i];
    while (c.charAt(0) === ' ') {
      c = c.substring(1);
    }
    if (c.indexOf(name) === 0) {
      return c.substring(name.length, c.length);
    }
  }
  return "";
}

function switchTheme(){
    if(localStorage.theme ==="dark"){
        localStorage.theme ="light"
        document.documentElement.classList.remove('dark')
    }else {
        localStorage.theme ="dark"
        document.documentElement.classList.add('dark')
    }
}

</script>

<script src="~/js/app.js" asp-append-version="true"></script>
@await RenderSectionAsync("Scripts", required: false)
</body>
</html>